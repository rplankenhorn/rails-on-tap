#!/usr/bin/env ruby
require "fileutils"

APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "üç∫ Rails on Tap - Monorepo Setup"
  puts "=================================="
  puts ""

  puts "== Installing dependencies =="
  system("bundle check") || system!("bundle install")
  system! "yarn install"

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Creating or updating API key =="
  system! "bin/rails runner \"
    key = ApiKey.find_or_create_by!(name: 'Local Development') { |k| k.token = SecureRandom.urlsafe_base64(32) }
    puts \\\"‚úì API Key: \#{key.token}\\\"
  \""

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\nüì± Android Setup:"
  if Dir.exist?("android")
    puts "  ‚Ä¢ Android app found in ./android/"
    puts "  ‚Ä¢ To setup: Open android/ folder in Android Studio"
    puts "  ‚Ä¢ Update MainActivity.kt API URL if needed"
  end

  puts "\nüìö Documentation:"
  puts "  ‚Ä¢ MONOREPO_DEVELOPMENT.md - Development workflow"
  puts "  ‚Ä¢ API_MOBILE_INTEGRATION.md - API reference"
  puts "  ‚Ä¢ android/README.md - Android-specific setup"

  unless ARGV.include?("--skip-server")
    puts "\n== Starting development server =="
    STDOUT.flush # flush the output before exec(2) so that it displays
    exec "bin/dev"
  end
end
