#!/bin/bash
# Quick deployment script for Rails on Tap to Docker registry

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}Rails on Tap - Docker Build & Push Script${NC}"
echo "=========================================="

# Check if RAILS_MASTER_KEY exists
if [ ! -f "config/master.key" ]; then
    echo -e "${RED}Error: config/master.key not found!${NC}"
    echo "This file is required for production deployment."
    exit 1
fi

# Prompt for registry information
echo ""
echo "Select your Docker registry:"
echo "1) Docker Hub (docker.io)"
echo "2) Private Registry"
read -p "Enter choice [1-2]: " registry_choice

if [ "$registry_choice" = "1" ]; then
    read -p "Enter your Docker Hub username: " username
    IMAGE_NAME="$username/rails-on-tap"
elif [ "$registry_choice" = "2" ]; then
    read -p "Enter your private registry URL (e.g., registry.local:5000): " registry_url
    read -p "Enter image name (e.g., rails-on-tap): " image_name
    IMAGE_NAME="$registry_url/$image_name"
else
    echo -e "${RED}Invalid choice${NC}"
    exit 1
fi

# Prompt for version tag
read -p "Enter version tag (default: latest): " version_tag
version_tag=${version_tag:-latest}

FULL_IMAGE_NAME="$IMAGE_NAME:$version_tag"

echo ""
echo -e "${YELLOW}Building image: $FULL_IMAGE_NAME${NC}"
echo ""

# Build the Docker image
docker build -t "$FULL_IMAGE_NAME" .

if [ $? -eq 0 ]; then
    echo -e "${GREEN}✓ Build successful!${NC}"
else
    echo -e "${RED}✗ Build failed!${NC}"
    exit 1
fi

# Also tag as latest if a specific version was provided
if [ "$version_tag" != "latest" ]; then
    docker tag "$FULL_IMAGE_NAME" "$IMAGE_NAME:latest"
    echo -e "${GREEN}✓ Tagged as latest${NC}"
fi

# Ask to push
echo ""
read -p "Push image to registry? (y/n): " should_push

if [ "$should_push" = "y" ] || [ "$should_push" = "Y" ]; then
    echo -e "${YELLOW}Pushing image to registry...${NC}"
    docker push "$FULL_IMAGE_NAME"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}✓ Push successful!${NC}"
        
        if [ "$version_tag" != "latest" ]; then
            docker push "$IMAGE_NAME:latest"
            echo -e "${GREEN}✓ Pushed latest tag${NC}"
        fi
    else
        echo -e "${RED}✗ Push failed!${NC}"
        echo "Make sure you're logged in: docker login"
        exit 1
    fi
fi

echo ""
echo -e "${GREEN}=========================================="
echo "Deployment Information"
echo "==========================================${NC}"
echo ""
echo "Image Name: $FULL_IMAGE_NAME"
echo ""
echo "Next steps:"
echo "1. Update docker-compose.production.yml with this image name"
echo "2. Copy your RAILS_MASTER_KEY from config/master.key"
echo "3. Deploy the stack in Portainer"
echo ""
echo "See PORTAINER_DEPLOYMENT.md for detailed instructions"
echo ""
